@*
    MTD OrderMaker - http://ordermaker.org
    Copyright (c) 2019 Oleg Bruev <job4bruev@gmail.com>. All rights reserved.
*@
@page
@model Mtd.OrderMaker.Server.Areas.Workplace.Pages.Store.CreateModel
@namespace Mtd.OrderMaker.Server.Components.Store

@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResource> Localizer

@{
    ViewData["Title"] = Localizer["Creating document"];
    ViewData["SecondTitle"] = Model.MtdForm.Name;
    string parentStoreId = Request.Query["parentStoreId"];
    string listGuid = Guid.NewGuid().ToString();
}

@section Head{
    <link rel="stylesheet" href="~/lib/mtd-ordermaker/store/css/mtd-store-edit.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/mtd-ordermaker/ui/css/mtd-ui-material.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/xdan/dist/jquery.datetimepicker.min.css" asp-append-version="true" />
}
@section Breadcrumb {
    <li mtd-data-href="/"><a href="/">@Localizer["Desktop"]</a></li>
    <li mtd-data-href="/workplace/store/index?indexForm=@Model.MtdForm.Id"><a href="/workplace/store/index?indexForm=@Model.MtdForm.Id">@Localizer["List data"]</a></li>
    <li>@ViewBag.Title</li>
}

<div class="mtd-desk">
    <div class="mtd-desk-panel">
        <div style="padding-left: 4px; z-index: 3; position:fixed">
            <div style="height: 56px;">
                <button mtd-data-clicker-by="store-create-clicker" class="mtd-fab mdc-fab" aria-label="Create" type="button">
                    <div class="mdc-fab__ripple"></div>
                    <span class="material-icons mdc-fab__icon">save</span>
                    <span class="mdc-fab__label mtd-main-display-none">@Localizer["Save"]</span>
                </button>
            </div>
            <div style="padding-top: 8px; padding-left: 8px">
                <button class="mtd-fab mdc-fab mdc-fab--mini" aria-label="List" mtd-data-href="/workplace/store/index?indexForm=@Model.MtdForm.Id">
                    <div class="mdc-fab__ripple"></div>
                    <span class="mdc-fab__icon material-icons">cancel</span>
                    <span class="mdc-fab__label mtd-main-display-none">@Localizer["Cancel"]</span>
                </button>
            </div>
        </div>
    </div>

    <div class="mtd-desk-blocks">
        <div class="mtd-desk-block">

            @if (Model.ParentForms != null && Model.ParentForms.Count > 0)
            {
                <div style="min-height: 128px; text-align:center">
                    <div id="block-relation" class="mtd-desk-block-content mdc-elevation--z4">
                        <div class="mtd-desk-block-title">
                            <div class="mtd-desk-block-title-icon"></div>
                            <div class="mtd-desk-block-title-label">
                                @Localizer["Document-based on"]
                            </div>
                            <div class="mtd-desk-block-title-button">
                                <button onclick="clickBlockFullScreen(this)"
                                        class="mdc-icon-button"
                                        aria-label="Add to favorites"
                                        aria-hidden="true"
                                        aria-pressed="false"
                                        data="block-relation">
                                    <i class="material-icons mdc-icon-button__icon mdc-icon-button__icon--on">close_fullscreen</i>
                                    <i class="material-icons mdc-icon-button__icon">open_in_full</i>
                                </button>
                            </div>
                        </div>


                        @await Component.InvokeAsync(typeof(StoreViewer), new
                            {
                                storeId = parentStoreId,
                                viewerId = listGuid
                            })

                        <div class="mtd-desk-block-body--hidden mtd-main-display-none">

                            @await Component.InvokeAsync(typeof(StoreList), new
                            {
                                resultTarget = "store-parent",
                                resultValue = parentStoreId,
                                relatedForms = Model.ParentForms,
                                listId = listGuid
                            })


                        </div>
                    </div>
                </div>
            }




            <div class="mdc-elevation--z4">
                @await Component.InvokeAsync("StoreForm", new { store = Model.MtdStore, type = FormType.Create })
            </div>
        </div>

    </div>
</div>


<div id="dialog-info" class="mdc-dialog"
     role="alertdialog"
     aria-modal="true"
     aria-labelledby="my-dialog-title"
     aria-describedby="my-dialog-content">
    <div class="mdc-dialog__container">
        <div class="mdc-dialog__surface">
            <h2 class="mdc-dialog__title" id="delete-dialog-title">
                <span id="dialog-info-title"></span>
            </h2>
            <div class="mdc-dialog__content" id="dialog-info-content">
            </div>
            <footer class="mdc-dialog__actions">
                <button type="button" class="mdc-button mdc-dialog__button" data-mdc-dialog-action="no">
                    <span class="mdc-button__label">@Localizer["OK"]</span>
                </button>
            </footer>
        </div>
    </div>
    <div class="mdc-dialog__scrim"></div>
</div>


@section Scripts {
    <script src="~/lib/mtd-ordermaker/store/js/mtd-store-edit.js" asp-append-version="true"></script>
    <script src="~/lib/mtd-ordermaker/ui/js/mtd-ui-material.js" asp-append-version="true"></script>
    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/moment/dist/js/moment-with-locales.min.js" asp-append-version="true"></script>
    <script src="~/lib/xdan/dist/jquery.datetimepicker.full.min.js" asp-append-version="true"></script>

    <script>
        $("input.mtd-data-datepicker").each(function () {
            $(this).datetimepicker({
                timepicker: false,
                @*mask: @Localizer["'19/39/9999'"],*@
                format: @Localizer["'m/d/Y'"],
                defaultDate: new Date(),
                defaultSelect: true,
                validateOnBlur: false,
            });
        });

        $("input.mtd-data-datetimepicker").each(function () {
            $(this).datetimepicker({
                timepicker: true,
                formatTime: @Localizer["'h:i A'"],
                validateOnBlur: false,
                @*mask: @Localizer["'19/39/9999 29:59'"],*@
                format: @Localizer["'m/d/Y h:i A'"],
                defaultDate: new Date(),
            });
        });
        $.datetimepicker.setLocale(@Localizer["'en'"]);
    </script>
}
