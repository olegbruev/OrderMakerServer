@model Mtd.OrderMaker.Server.Areas.Workplace.Pages.Store.DetailsModel
@namespace Mtd.OrderMaker.Server.Components.Store
@using Mtd.OrderMaker.Server.EntityHandler.Approval
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResource> Localizer

<div class="mtd-desk-block-content mtd-desk-block--border">
    <div class="mtd-desk-block-title">
        <div class="mtd-desk-block-title-icon">
            <i class="material-icons" aria-hidden="true">history</i>
        </div>
        <div class="mtd-desk-block-title-label">
            @Localizer["Changes history"]
        </div>
        <div class="mtd-desk-block-title-button">
            <button onclick="clickBlockToogle(this)"
                    class="mdc-icon-button"
                    aria-label="Add to favorites"
                    aria-hidden="true"
                    aria-pressed="false"
                    data="block-history">
                <i class="material-icons mdc-icon-button__icon mdc-icon-button__icon--on">add_box</i>
                <i class="material-icons mdc-icon-button__icon">indeterminate_check_box</i>
            </button>
        </div>
    </div>
    <div id="block-history" class="mtd-desk-block-body">
        <table style="white-space: nowrap; border-collapse:collapse">
            <thead><tr><th></th><th style="width:100%"></th><th></th></tr></thead>
            <tr><td>@Localizer["Created by"]</td><td>@Localizer[$"{Model.ChangesHistory.CreateByUser}"]</td><td>@Localizer[$"{Model.ChangesHistory.CreateByTime}"]</td></tr>
            <tr><td>@Localizer["Last edited by"]</td><td>@Localizer[$"{Model.ChangesHistory.LastEditedUser}"]</td><td>@Localizer[$"{Model.ChangesHistory.LastEditedTime}"]</td></tr>
            <tr><td colspan="3"></td></tr>
            @foreach (var item in Model.ApprovalHistory)
            {
                if (!item.IsSign)
                {
                    <tr style=" border-top: 1px solid #ccc;">
                        <td align="center">
                            @if (item.Result == 1)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {
                                    <i class="material-icons" style="color:green">thumb_up_alt</i>
                                }
                            }
                            @if (item.Result < 0)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {

                                    if (item.Result == -2)
                                    {
                                        <i class="fas fa-reply-all" style="padding-bottom: 6px;  font-size: 20px; color:brown"></i>
                                    }
                                    else
                                    {
                                        <i class="material-icons" style="color:red">thumb_down_alt</i>
                                    }
                                }
                            }
                        </td>

                        <td style="width:100%; max-width: 250px; white-space:normal">
                            @if (item.Result == -2)
                            {
                                <div>
                                    <span>@Localizer["Document returned for review"]</span>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <strong style="color: @item.Color">@item.Note</strong>
                                </div>
                            }

                            <div>
                                @item.UserName
                            </div>
                            @if (item.Comment.Length > 0)
                            {
                                <div style="font-style:italic; font-size:small;">
                                    <i class="material-icons" aria-hidden="true" style="color: slategray">comment</i>
                                    @item.Comment
                                </div>
                            }

                        </td>
                        <td>
                            <div>@item.Time</div>
                        </td>
                    </tr>
                }
                else
                {
                    <tr style=" border-top: 1px solid #ccc;">
                        <td align="center">
                            @if (item.Result == 0 && item.UserRecipient != null)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {
                                    <i class="fas fa-share-square" style="font-size: 20px;"></i>
                                }
                            }

                            @if (item.Result == 0 && item.UserRecipient == null)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {
                                    <i class="fas fa-reply" style="padding-bottom: 6px;  font-size: 20px;"></i>
                                }
                            }

                            @if (item.Result == 1)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {
                                    <i class="material-icons" style="color:green">thumb_up_alt</i>
                                }
                            }
                            @if (item.Result == -1)
                            {
                                if (item.ImgData != null)
                                {
                                    @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = item.ImgData, imgType = item.ImgType })
                                }
                                else
                                {
                                    <i class="material-icons" style="color:red">thumb_down_alt</i>

                                }
                            }
                        </td>

                        <td style="width:100%; max-width: 250px; white-space:normal">
                            @if (item.UserRecipient != null)
                            {
                                <div>
                                    <span style="color: @item.Color">@Localizer["User Resolution Request"] - @item.UserRecipient</span>
                                </div>
                            }
                            <div>
                                @item.UserName
                            </div>
                            @if (item.Comment.Length > 0)
                            {
                                <div style="font-style:italic; font-size:small;">
                                    <i class="material-icons" aria-hidden="true" style="color: slategray;">comment</i>
                                    @item.Comment
                                </div>
                            }

                        </td>
                        <td>
                            <div>@item.Time</div>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>
